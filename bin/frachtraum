#!/usr/bin/env ruby
# -*- encoding : utf-8 -*-

require 'frachtraum'
require 'thor'

class FrachtraumCLI < Thor
  
  desc "attach [DEPOT]", "decrypt and mount depot(s)"
  long_desc <<-LONGDESC
    `frachtraum attach` will prompt you for a password.
    
    The password is used to decrypt all depots specified
    in #{Frachtraum::CONFIG_FILE}

    You can optionally specify a single depot. In this case
    only this depot will be decrypted and mounted.
  LONGDESC
  def attach(depot=nil)
    
    case RUBY_PLATFORM
      when /bsd/   then Frachtraum.attach_bsd   depot
      when /linux/ then Frachtraum.attach_linux depot
    end
  end
  
  # --------------
  
  desc "capacity [OPTION]", "calculate storage capacity"
  long_desc <<-LONGDESC
    `frachtraum capacity` will output capacity...

    lorem ipsum
  LONGDESC
  def capacity(option=nil)
    c = Frachtraum.capacity
    
    case option
    when "smb", "samba"
      puts "#{c[:total]/1000} #{c[:avail]/1000}"
    else
      puts "Capacity:"
      puts "    Available:\t#{Frachtraum.pretty_SI_bytes(c[:avail])}"
      puts "    Used:\t#{Frachtraum.pretty_SI_bytes(c[:used])}"
      puts "    Total:\t#{Frachtraum.pretty_SI_bytes(c[:total])}"
    end
  end
  
  # --------------
  
  desc "diskreport", "lorem ipsum"
  long_desc <<-LONGDESC
    lorem ipsum
  LONGDESC
  def diskreport()
    # TODO
  end
  
  # --------------
  
  desc "list", "list depots"
  long_desc <<-LONGDESC
    lorem ipsum
  LONGDESC
  option :simple, :type => :boolean
  def list(subset=nil)
    
    if subset == "depot" || subset == "depots" || subset.nil?
      if options[:simple]
        Frachtraum::DEPOTS.each{ |depot| puts depot }
      else
        puts "" # empty line
        puts "Depots:"
        puts "" # empty line
        Frachtraum::DEPOTS.each{ |depot| puts "    #{depot}" }
        puts "" # empty line
      end
    end
    
    if subset == "timemachine" || subset == "tm" || subset.nil?
      if options[:simple]
        Frachtraum::TIMEMACHINE_TARGETS.each{ |depot| puts depot }
      else
        puts "" unless subset.nil? # empty line
        puts "Timemachine targets:"
        puts "" # empty line
        Frachtraum::TIMEMACHINE_TARGETS.each{ |tm| puts "    #{tm}" }
        puts "" # empty line
      end
    end 
  end
  
  # --------------
  
  desc "setupdisk", "setup a device as a new depot"
  long_desc <<-LONGDESC
    `frachtraum setup dev label` will setup...
    
    lorem ispum
  LONGDESC
  options :compression => :string, :encryption => :string, :keylength => :integer, :mountpoint => :string
  def setupdisk(dev,label)
    
    compression = options[:compression] ? options[:compression] : Frachtraum::COMPRESSION
    encryption  = options[:encryption]  ? options[:encryption]  : Frachtraum::ENCRYPTION
    keylength   = options[:keylength]   ? options[:keylength]   : Frachtraum::KEYLENGTH
    mountpoint  = options[:mountpoint]  ? options[:mountpoint]  : Frachtraum::MOUNTPOINT
    
    case RUBY_PLATFORM
      when /bsd/   then Frachtraum.setupdisk_bsd   dev, label, compression, encryption, keylength, mountpoint
      when /linux/ then Frachtraum.setupdisk_linux dev, label, compression, encryption, keylength, mountpoint
      else abort "OS not supported"
    end
    
  end
  
  # --------------
  
  desc "sweep", "sweeps the frachtraum"
  long_desc <<-LONGDESC
    `frachtraum sweep` will ...

    lorem ipsum
  LONGDESC
  def sweep()
    # TODO
  end
  
  # --------------
  
  desc "test", "test system for compatibility"
  long_desc <<-LONGDESC
    `frachtraum test` will test...

    lorem ipsum
  LONGDESC
  def test()
    Frachtraum.run_system_test
  end
  
end
 
FrachtraumCLI.start(ARGV)